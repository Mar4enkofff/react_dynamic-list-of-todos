{"version":3,"sources":["types/constants.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","VisibleTodos.ts","index.tsx"],"names":["Filter","TodoList","todos","selectedTodo","setSelectedTodo","handleSelectedTodo","useCallback","todo","className","map","classNames","id","completed","title","type","onClick","TodoFilter","filter","setFilter","query","setQuery","handleFilterChange","event","target","value","handleQueryChange","DeleteQuery","onChange","All","Active","Completed","placeholder","style","pointerEvents","Loader","React","memo","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","finally","handleResetTodo","href","email","name","App","setTodos","visibleTodos","useMemo","prepared","toLowerCase","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d8930d3.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const handleSelectedTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  {selectedTodo?.id === todo.id\n                    ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { Filter } from '../../types/constants';\n\ntype Props = {\n  filter: Filter;\n  setFilter: (filter: Filter) => void;\n  query: string;\n  setQuery: (title: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  query,\n  setQuery,\n}) => {\n  const handleFilterChange = useCallback((\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setFilter(event.target.value as Filter);\n  }, []);\n\n  const handleQueryChange = useCallback((\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n  }, []);\n\n  const DeleteQuery = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilterChange}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={DeleteQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [selectedTodo]);\n\n  const handleResetTodo = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleResetTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/constants';\nimport { getTodos } from './api';\nimport { getVisibleTodos } from './VisibleTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return getVisibleTodos(query, filter, todos);\n  }, [query, filter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import { Filter } from './types/constants';\nimport { Todo } from './types/Todo';\n\nexport function getVisibleTodos(query: string, filter: Filter, todos: Todo[]) {\n  let prepared = [...todos];\n\n  if (query) {\n    prepared = prepared.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  switch (filter) {\n    case Filter.Completed:\n      return prepared.filter((todo) => todo.completed);\n    case Filter.Active:\n      return prepared.filter((todo) => !todo.completed);\n    default:\n      return prepared;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}